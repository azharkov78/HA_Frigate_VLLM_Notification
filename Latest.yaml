blueprint:
  name: Frigate LLM Notification with Telegram (v0.44)
  author: whag (modified by Grok)
  description: >
     Basic requirements:<br />
     - Home Assistant with an MQTT broker setup. <br />
     - Frigate integration with MQTT setup. <br />
     Link: https://github.com/blakeblackshear/frigate-hass-integration <br />
     - LLM Vision integration with provider setup. <br />
     Link: https://github.com/valentinfrlch/ha-llmvision <br />
     - Downloader integration. <br />
     Link: https://www.home-assistant.io/integrations/downloader/ <br />
     - Telegram Bot integration setup in Home Assistant. <br />
     Link: https://www.home-assistant.io/integrations/telegram_bot/ <br /><br />
     
     Information:<br />
     - Only suitable for one Frigate camera, use multiple instances of this automation for multiple cameras if required. <br />
     - LLM Vision requires a provider setup for the automation to function, remember and memory options are optional. <br />
     - Telegram notifications require a Telegram bot and chat ID configured in Home Assistant. <br /><br />
     Description: <br />
     Use LLM Vision to analyze Frigate snapshots and clips, sending notifications via the Home Assistant companion app and Telegram. <br />
     Monitors MQTT frigate/reviews topic of types [new],[update] and [end]. <br />
     The Downloader integration is used for storing Frigate files locally before sending to LLM. <br />
     Note that the downloader folder will need maintenance separately (e.g., old files deleted or backed up). <br />
     This automation runs in parallel mode. <br /><br />
     Tested on Android and Telegram. <br /><br />
     
     Variables which may be useful for the custom message and AI prompts
       - {{input_objects}} = Objects required<br />
       - {{objects}} = Objects found<br />
       - {{input_camera_name}} = Camera required<br />
       - {{camera_name}} = Camera triggered<br />
       - {{zone_names}} = Zones required<br />
       - {{before_zones}} = Zones triggered first<br />
       - {{after_zones}} = Zones triggered last<br />
       - {{detections[0]}} = Event ID 1 (i.e., triggering event)<br />
       - {{detections[1]}} = Event ID 2<br />

     Version: v 0.44

  domain: automation
  input:
    frigate:
      name: Frigate Options
      icon: mdi:cog
      description: Frigate options
      collapsed: true
      input:
        in_camera:
          name: Frigate Camera
          description: Frigate cameras only
          selector:
            entity:
              multiple: false
              filter:
                - integration: frigate
                  domain: camera
        in_severity:
          name: Severity
          description: Frigate event severity.
          default: 
            - alert
            - detection
          selector:
            select:
              options:
                - label: Alert
                  value: alert
                - label: Detection
                  value: detection
              multiple: true
        in_zones:
          name: Fr
